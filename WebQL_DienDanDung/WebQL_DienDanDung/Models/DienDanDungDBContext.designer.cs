#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebQL_DienDanDung.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_DIENDANDUNG")]
	public partial class DienDanDungDBContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Account(tbl_Account instance);
    partial void Updatetbl_Account(tbl_Account instance);
    partial void Deletetbl_Account(tbl_Account instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    partial void Inserttbl_Bill(tbl_Bill instance);
    partial void Updatetbl_Bill(tbl_Bill instance);
    partial void Deletetbl_Bill(tbl_Bill instance);
    partial void Inserttbl_Customer(tbl_Customer instance);
    partial void Updatetbl_Customer(tbl_Customer instance);
    partial void Deletetbl_Customer(tbl_Customer instance);
    partial void Inserttbl_Producer(tbl_Producer instance);
    partial void Updatetbl_Producer(tbl_Producer instance);
    partial void Deletetbl_Producer(tbl_Producer instance);
    partial void Inserttbl_Product(tbl_Product instance);
    partial void Updatetbl_Product(tbl_Product instance);
    partial void Deletetbl_Product(tbl_Product instance);
    partial void Inserttbl_ProductOfBill(tbl_ProductOfBill instance);
    partial void Updatetbl_ProductOfBill(tbl_ProductOfBill instance);
    partial void Deletetbl_ProductOfBill(tbl_ProductOfBill instance);
    partial void Inserttbl_Store(tbl_Store instance);
    partial void Updatetbl_Store(tbl_Store instance);
    partial void Deletetbl_Store(tbl_Store instance);
    partial void Inserttbl_TypeOfAccount(tbl_TypeOfAccount instance);
    partial void Updatetbl_TypeOfAccount(tbl_TypeOfAccount instance);
    partial void Deletetbl_TypeOfAccount(tbl_TypeOfAccount instance);
    partial void Inserttbl_TypeOfProduct(tbl_TypeOfProduct instance);
    partial void Updatetbl_TypeOfProduct(tbl_TypeOfProduct instance);
    partial void Deletetbl_TypeOfProduct(tbl_TypeOfProduct instance);
    #endregion
		
		public DienDanDungDBContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_DIENDANDUNGConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DienDanDungDBContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DienDanDungDBContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DienDanDungDBContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DienDanDungDBContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Account> tbl_Accounts
		{
			get
			{
				return this.GetTable<tbl_Account>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Bill> tbl_Bills
		{
			get
			{
				return this.GetTable<tbl_Bill>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Customer> tbl_Customers
		{
			get
			{
				return this.GetTable<tbl_Customer>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Producer> tbl_Producers
		{
			get
			{
				return this.GetTable<tbl_Producer>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Product> tbl_Products
		{
			get
			{
				return this.GetTable<tbl_Product>();
			}
		}
		
		public System.Data.Linq.Table<tbl_ProductOfBill> tbl_ProductOfBills
		{
			get
			{
				return this.GetTable<tbl_ProductOfBill>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Store> tbl_Stores
		{
			get
			{
				return this.GetTable<tbl_Store>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TypeOfAccount> tbl_TypeOfAccounts
		{
			get
			{
				return this.GetTable<tbl_TypeOfAccount>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TypeOfProduct> tbl_TypeOfProducts
		{
			get
			{
				return this.GetTable<tbl_TypeOfProduct>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Account")]
	public partial class tbl_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<int> _UserId;
		
		private string _AccountImage;
		
		private int _TypeOfAccountId;
		
		private System.Nullable<bool> _Status;
		
		private EntityRef<tbl_User> _tbl_User;
		
		private EntityRef<tbl_TypeOfAccount> _tbl_TypeOfAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAccountImageChanging(string value);
    partial void OnAccountImageChanged();
    partial void OnTypeOfAccountIdChanging(int value);
    partial void OnTypeOfAccountIdChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public tbl_Account()
		{
			this._tbl_User = default(EntityRef<tbl_User>);
			this._tbl_TypeOfAccount = default(EntityRef<tbl_TypeOfAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Char(12)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountImage", DbType="VarChar(MAX)")]
		public string AccountImage
		{
			get
			{
				return this._AccountImage;
			}
			set
			{
				if ((this._AccountImage != value))
				{
					this.OnAccountImageChanging(value);
					this.SendPropertyChanging();
					this._AccountImage = value;
					this.SendPropertyChanged("AccountImage");
					this.OnAccountImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfAccountId", DbType="Int NOT NULL")]
		public int TypeOfAccountId
		{
			get
			{
				return this._TypeOfAccountId;
			}
			set
			{
				if ((this._TypeOfAccountId != value))
				{
					if (this._tbl_TypeOfAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._TypeOfAccountId = value;
					this.SendPropertyChanged("TypeOfAccountId");
					this.OnTypeOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Account", Storage="_tbl_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_Accounts.Remove(this);
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_Accounts.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TypeOfAccount_tbl_Account", Storage="_tbl_TypeOfAccount", ThisKey="TypeOfAccountId", OtherKey="Id", IsForeignKey=true)]
		public tbl_TypeOfAccount tbl_TypeOfAccount
		{
			get
			{
				return this._tbl_TypeOfAccount.Entity;
			}
			set
			{
				tbl_TypeOfAccount previousValue = this._tbl_TypeOfAccount.Entity;
				if (((previousValue != value) 
							|| (this._tbl_TypeOfAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_TypeOfAccount.Entity = null;
						previousValue.tbl_Accounts.Remove(this);
					}
					this._tbl_TypeOfAccount.Entity = value;
					if ((value != null))
					{
						value.tbl_Accounts.Add(this);
						this._TypeOfAccountId = value.Id;
					}
					else
					{
						this._TypeOfAccountId = default(int);
					}
					this.SendPropertyChanged("tbl_TypeOfAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_User")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private System.Nullable<bool> _Gender;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<tbl_Account> _tbl_Accounts;
		
		private EntitySet<tbl_Bill> _tbl_Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public tbl_User()
		{
			this._tbl_Accounts = new EntitySet<tbl_Account>(new Action<tbl_Account>(this.attach_tbl_Accounts), new Action<tbl_Account>(this.detach_tbl_Accounts));
			this._tbl_Bills = new EntitySet<tbl_Bill>(new Action<tbl_Bill>(this.attach_tbl_Bills), new Action<tbl_Bill>(this.detach_tbl_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Account", Storage="_tbl_Accounts", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<tbl_Account> tbl_Accounts
		{
			get
			{
				return this._tbl_Accounts;
			}
			set
			{
				this._tbl_Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Bill", Storage="_tbl_Bills", ThisKey="Id", OtherKey="PersionalID")]
		public EntitySet<tbl_Bill> tbl_Bills
		{
			get
			{
				return this._tbl_Bills;
			}
			set
			{
				this._tbl_Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Accounts(tbl_Account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = this;
		}
		
		private void detach_tbl_Accounts(tbl_Account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = null;
		}
		
		private void attach_tbl_Bills(tbl_Bill entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = this;
		}
		
		private void detach_tbl_Bills(tbl_Bill entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Bill")]
	public partial class tbl_Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _PersionalID;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<decimal> _SumMoney;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<tbl_ProductOfBill> _tbl_ProductOfBills;
		
		private EntityRef<tbl_User> _tbl_User;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnPersionalIDChanging(System.Nullable<int> value);
    partial void OnPersionalIDChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnSumMoneyChanging(System.Nullable<decimal> value);
    partial void OnSumMoneyChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public tbl_Bill()
		{
			this._tbl_ProductOfBills = new EntitySet<tbl_ProductOfBill>(new Action<tbl_ProductOfBill>(this.attach_tbl_ProductOfBills), new Action<tbl_ProductOfBill>(this.detach_tbl_ProductOfBills));
			this._tbl_User = default(EntityRef<tbl_User>);
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersionalID", DbType="Int")]
		public System.Nullable<int> PersionalID
		{
			get
			{
				return this._PersionalID;
			}
			set
			{
				if ((this._PersionalID != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersionalIDChanging(value);
					this.SendPropertyChanging();
					this._PersionalID = value;
					this.SendPropertyChanged("PersionalID");
					this.OnPersionalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="Date")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumMoney", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SumMoney
		{
			get
			{
				return this._SumMoney;
			}
			set
			{
				if ((this._SumMoney != value))
				{
					this.OnSumMoneyChanging(value);
					this.SendPropertyChanging();
					this._SumMoney = value;
					this.SendPropertyChanged("SumMoney");
					this.OnSumMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Bill_tbl_ProductOfBill", Storage="_tbl_ProductOfBills", ThisKey="Id", OtherKey="BillId")]
		public EntitySet<tbl_ProductOfBill> tbl_ProductOfBills
		{
			get
			{
				return this._tbl_ProductOfBills;
			}
			set
			{
				this._tbl_ProductOfBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Bill", Storage="_tbl_User", ThisKey="PersionalID", OtherKey="Id", IsForeignKey=true)]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_Bills.Remove(this);
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_Bills.Add(this);
						this._PersionalID = value.Id;
					}
					else
					{
						this._PersionalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Bill", Storage="_tbl_Customer", ThisKey="CustomerID", OtherKey="Id", IsForeignKey=true)]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_Bills.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_Bills.Add(this);
						this._CustomerID = value.Id;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_ProductOfBills(tbl_ProductOfBill entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Bill = this;
		}
		
		private void detach_tbl_ProductOfBills(tbl_ProductOfBill entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Customer")]
	public partial class tbl_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private System.Nullable<bool> _Gender;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private EntitySet<tbl_Bill> _tbl_Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public tbl_Customer()
		{
			this._tbl_Bills = new EntitySet<tbl_Bill>(new Action<tbl_Bill>(this.attach_tbl_Bills), new Action<tbl_Bill>(this.detach_tbl_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Bill", Storage="_tbl_Bills", ThisKey="Id", OtherKey="CustomerID")]
		public EntitySet<tbl_Bill> tbl_Bills
		{
			get
			{
				return this._tbl_Bills;
			}
			set
			{
				this._tbl_Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Bills(tbl_Bill entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_Bills(tbl_Bill entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Producer")]
	public partial class tbl_Producer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProducerName;
		
		private string _PhoneNumber;
		
		private string _Location;
		
		private string _Mail;
		
		private string _ProducerImage;
		
		private EntitySet<tbl_Product> _tbl_Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProducerNameChanging(string value);
    partial void OnProducerNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnProducerImageChanging(string value);
    partial void OnProducerImageChanged();
    #endregion
		
		public tbl_Producer()
		{
			this._tbl_Products = new EntitySet<tbl_Product>(new Action<tbl_Product>(this.attach_tbl_Products), new Action<tbl_Product>(this.detach_tbl_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProducerName", DbType="NVarChar(MAX)")]
		public string ProducerName
		{
			get
			{
				return this._ProducerName;
			}
			set
			{
				if ((this._ProducerName != value))
				{
					this.OnProducerNameChanging(value);
					this.SendPropertyChanging();
					this._ProducerName = value;
					this.SendPropertyChanged("ProducerName");
					this.OnProducerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Char(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(MAX)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="VarChar(MAX)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProducerImage", DbType="VarChar(MAX)")]
		public string ProducerImage
		{
			get
			{
				return this._ProducerImage;
			}
			set
			{
				if ((this._ProducerImage != value))
				{
					this.OnProducerImageChanging(value);
					this.SendPropertyChanging();
					this._ProducerImage = value;
					this.SendPropertyChanged("ProducerImage");
					this.OnProducerImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Producer_tbl_Product", Storage="_tbl_Products", ThisKey="Id", OtherKey="ProducerId")]
		public EntitySet<tbl_Product> tbl_Products
		{
			get
			{
				return this._tbl_Products;
			}
			set
			{
				this._tbl_Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Products(tbl_Product entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Producer = this;
		}
		
		private void detach_tbl_Products(tbl_Product entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Producer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Product")]
	public partial class tbl_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProductName;
		
		private System.Nullable<int> _NumberOfProduct;
		
		private string _ProductImage;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<int> _ExpiryDate;
		
		private System.Nullable<int> _TypeId;
		
		private System.Nullable<int> _ProducerId;
		
		private EntitySet<tbl_ProductOfBill> _tbl_ProductOfBills;
		
		private EntitySet<tbl_Store> _tbl_Stores;
		
		private EntityRef<tbl_Producer> _tbl_Producer;
		
		private EntityRef<tbl_TypeOfProduct> _tbl_TypeOfProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnNumberOfProductChanging(System.Nullable<int> value);
    partial void OnNumberOfProductChanged();
    partial void OnProductImageChanging(string value);
    partial void OnProductImageChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnExpiryDateChanging(System.Nullable<int> value);
    partial void OnExpiryDateChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnProducerIdChanging(System.Nullable<int> value);
    partial void OnProducerIdChanged();
    #endregion
		
		public tbl_Product()
		{
			this._tbl_ProductOfBills = new EntitySet<tbl_ProductOfBill>(new Action<tbl_ProductOfBill>(this.attach_tbl_ProductOfBills), new Action<tbl_ProductOfBill>(this.detach_tbl_ProductOfBills));
			this._tbl_Stores = new EntitySet<tbl_Store>(new Action<tbl_Store>(this.attach_tbl_Stores), new Action<tbl_Store>(this.detach_tbl_Stores));
			this._tbl_Producer = default(EntityRef<tbl_Producer>);
			this._tbl_TypeOfProduct = default(EntityRef<tbl_TypeOfProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfProduct", DbType="Int")]
		public System.Nullable<int> NumberOfProduct
		{
			get
			{
				return this._NumberOfProduct;
			}
			set
			{
				if ((this._NumberOfProduct != value))
				{
					this.OnNumberOfProductChanging(value);
					this.SendPropertyChanging();
					this._NumberOfProduct = value;
					this.SendPropertyChanged("NumberOfProduct");
					this.OnNumberOfProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductImage", DbType="VarChar(MAX)")]
		public string ProductImage
		{
			get
			{
				return this._ProductImage;
			}
			set
			{
				if ((this._ProductImage != value))
				{
					this.OnProductImageChanging(value);
					this.SendPropertyChanging();
					this._ProductImage = value;
					this.SendPropertyChanged("ProductImage");
					this.OnProductImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Int")]
		public System.Nullable<int> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._tbl_TypeOfProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProducerId", DbType="Int")]
		public System.Nullable<int> ProducerId
		{
			get
			{
				return this._ProducerId;
			}
			set
			{
				if ((this._ProducerId != value))
				{
					if (this._tbl_Producer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducerIdChanging(value);
					this.SendPropertyChanging();
					this._ProducerId = value;
					this.SendPropertyChanged("ProducerId");
					this.OnProducerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Product_tbl_ProductOfBill", Storage="_tbl_ProductOfBills", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<tbl_ProductOfBill> tbl_ProductOfBills
		{
			get
			{
				return this._tbl_ProductOfBills;
			}
			set
			{
				this._tbl_ProductOfBills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Product_tbl_Store", Storage="_tbl_Stores", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<tbl_Store> tbl_Stores
		{
			get
			{
				return this._tbl_Stores;
			}
			set
			{
				this._tbl_Stores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Producer_tbl_Product", Storage="_tbl_Producer", ThisKey="ProducerId", OtherKey="Id", IsForeignKey=true)]
		public tbl_Producer tbl_Producer
		{
			get
			{
				return this._tbl_Producer.Entity;
			}
			set
			{
				tbl_Producer previousValue = this._tbl_Producer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Producer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Producer.Entity = null;
						previousValue.tbl_Products.Remove(this);
					}
					this._tbl_Producer.Entity = value;
					if ((value != null))
					{
						value.tbl_Products.Add(this);
						this._ProducerId = value.Id;
					}
					else
					{
						this._ProducerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Producer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TypeOfProduct_tbl_Product", Storage="_tbl_TypeOfProduct", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public tbl_TypeOfProduct tbl_TypeOfProduct
		{
			get
			{
				return this._tbl_TypeOfProduct.Entity;
			}
			set
			{
				tbl_TypeOfProduct previousValue = this._tbl_TypeOfProduct.Entity;
				if (((previousValue != value) 
							|| (this._tbl_TypeOfProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_TypeOfProduct.Entity = null;
						previousValue.tbl_Products.Remove(this);
					}
					this._tbl_TypeOfProduct.Entity = value;
					if ((value != null))
					{
						value.tbl_Products.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_TypeOfProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_ProductOfBills(tbl_ProductOfBill entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Product = this;
		}
		
		private void detach_tbl_ProductOfBills(tbl_ProductOfBill entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Product = null;
		}
		
		private void attach_tbl_Stores(tbl_Store entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Product = this;
		}
		
		private void detach_tbl_Stores(tbl_Store entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ProductOfBill")]
	public partial class tbl_ProductOfBill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BillId;
		
		private int _ProductId;
		
		private System.Nullable<int> _Number;
		
		private System.Nullable<decimal> _SumCost;
		
		private EntityRef<tbl_Bill> _tbl_Bill;
		
		private EntityRef<tbl_Product> _tbl_Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIdChanging(int value);
    partial void OnBillIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnSumCostChanging(System.Nullable<decimal> value);
    partial void OnSumCostChanged();
    #endregion
		
		public tbl_ProductOfBill()
		{
			this._tbl_Bill = default(EntityRef<tbl_Bill>);
			this._tbl_Product = default(EntityRef<tbl_Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BillId
		{
			get
			{
				return this._BillId;
			}
			set
			{
				if ((this._BillId != value))
				{
					if (this._tbl_Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillIdChanging(value);
					this.SendPropertyChanging();
					this._BillId = value;
					this.SendPropertyChanged("BillId");
					this.OnBillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._tbl_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SumCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SumCost
		{
			get
			{
				return this._SumCost;
			}
			set
			{
				if ((this._SumCost != value))
				{
					this.OnSumCostChanging(value);
					this.SendPropertyChanging();
					this._SumCost = value;
					this.SendPropertyChanged("SumCost");
					this.OnSumCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Bill_tbl_ProductOfBill", Storage="_tbl_Bill", ThisKey="BillId", OtherKey="Id", IsForeignKey=true)]
		public tbl_Bill tbl_Bill
		{
			get
			{
				return this._tbl_Bill.Entity;
			}
			set
			{
				tbl_Bill previousValue = this._tbl_Bill.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Bill.Entity = null;
						previousValue.tbl_ProductOfBills.Remove(this);
					}
					this._tbl_Bill.Entity = value;
					if ((value != null))
					{
						value.tbl_ProductOfBills.Add(this);
						this._BillId = value.Id;
					}
					else
					{
						this._BillId = default(int);
					}
					this.SendPropertyChanged("tbl_Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Product_tbl_ProductOfBill", Storage="_tbl_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public tbl_Product tbl_Product
		{
			get
			{
				return this._tbl_Product.Entity;
			}
			set
			{
				tbl_Product previousValue = this._tbl_Product.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Product.Entity = null;
						previousValue.tbl_ProductOfBills.Remove(this);
					}
					this._tbl_Product.Entity = value;
					if ((value != null))
					{
						value.tbl_ProductOfBills.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("tbl_Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Store")]
	public partial class tbl_Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private System.Nullable<int> _Number;
		
		private EntityRef<tbl_Product> _tbl_Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    #endregion
		
		public tbl_Store()
		{
			this._tbl_Product = default(EntityRef<tbl_Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._tbl_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Product_tbl_Store", Storage="_tbl_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public tbl_Product tbl_Product
		{
			get
			{
				return this._tbl_Product.Entity;
			}
			set
			{
				tbl_Product previousValue = this._tbl_Product.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Product.Entity = null;
						previousValue.tbl_Stores.Remove(this);
					}
					this._tbl_Product.Entity = value;
					if ((value != null))
					{
						value.tbl_Stores.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("tbl_Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TypeOfAccount")]
	public partial class tbl_TypeOfAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TypeName;
		
		private EntitySet<tbl_Account> _tbl_Accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public tbl_TypeOfAccount()
		{
			this._tbl_Accounts = new EntitySet<tbl_Account>(new Action<tbl_Account>(this.attach_tbl_Accounts), new Action<tbl_Account>(this.detach_tbl_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(MAX)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TypeOfAccount_tbl_Account", Storage="_tbl_Accounts", ThisKey="Id", OtherKey="TypeOfAccountId")]
		public EntitySet<tbl_Account> tbl_Accounts
		{
			get
			{
				return this._tbl_Accounts;
			}
			set
			{
				this._tbl_Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Accounts(tbl_Account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TypeOfAccount = this;
		}
		
		private void detach_tbl_Accounts(tbl_Account entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TypeOfAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TypeOfProduct")]
	public partial class tbl_TypeOfProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TypeName;
		
		private EntitySet<tbl_Product> _tbl_Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public tbl_TypeOfProduct()
		{
			this._tbl_Products = new EntitySet<tbl_Product>(new Action<tbl_Product>(this.attach_tbl_Products), new Action<tbl_Product>(this.detach_tbl_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(MAX)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TypeOfProduct_tbl_Product", Storage="_tbl_Products", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<tbl_Product> tbl_Products
		{
			get
			{
				return this._tbl_Products;
			}
			set
			{
				this._tbl_Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Products(tbl_Product entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TypeOfProduct = this;
		}
		
		private void detach_tbl_Products(tbl_Product entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TypeOfProduct = null;
		}
	}
}
#pragma warning restore 1591
